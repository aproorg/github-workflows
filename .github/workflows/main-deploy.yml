name: "🚀 Build and deploy to main"
on:
  workflow_call:
    inputs:
      aws_dev_account_id:
        required: true
        type: string
      aws_region:
        default: eu-west-1
        type: string
      github_ci_role_arn:
        required: true
        type: string
      github_ci_ecr_role_arn:
        required: true
        type: string
      service_name:
        required: true
        type: string
      cluster_name:
        required: true
        type: string
      ecr_repository:
        required: true
        type: string
      terraform_version:
        description: "Terraform version"
        type: string
        default: "1.9.8"
    secrets:
      token:
        required: true

permissions:
  id-token: write # Required f. IAM Token
  contents: write

jobs:
  terraform-quality-checks:
    name: "✅ Terraform Quality checks"
    uses: ./.github/workflows/terraform-quality-checks.yml
    with:
      terraform_version: ${{ inputs.terraform_version }}

  get-next-version:
    name: 🏷️ Get next version
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.get-next-version.outputs.new_release_published }}
    steps:
      - name: 📁 Checkout
        uses: actions/checkout@v4

      - name: 🏷️ Get next version
        id: get-next-version
        uses: aproorg/github-workflows/.github/actions/get-next-version@main
        with:
          github_token: ${{ secrets.token }}

  create-ecr-repo:
    name: "🚀 Apply shared"
    runs-on: ubuntu-latest
    steps:
      - name: 📁 Checkout
        uses: actions/checkout@v4

      - name: "🚀 Apply shared"
        uses: aproorg/github-workflows/.github/actions/apply-shared@main
        with:
          AWS_REGION: ${{ inputs.aws_region }}
          AWS_ECR_DEPLOYMENT_ROLE: ${{ inputs.github_ci_ecr_role_arn }}
          TERRAFORM_VERSION: ${{ inputs.terraform_version }}

  build-and-push:
    name: "️️️🏗️ Build and push"
    needs:
      - terraform-quality-checks
      - get-next-version
    if: ${{ needs.get-next-version.outputs.new_release_published == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: 📁 Checkout
        uses: actions/checkout@v4

      - name: "️️️🏗️ Build and push image"
        uses: aproorg/github-workflows/.github/actions/build-and-push-image@main
        with:
          AWS_REGION: ${{ inputs.aws_region }}
          AWS_ROLE_ARN: ${{ inputs.github_ci_ecr_role_arn }}
          ECR_REPOSITORY: ${{ inputs.ecr_repository }}

  deploy-to-dev:
    name: "🚀 Deploy to dev"
    environment: dev
    needs:
      - build-and-push
    if: ${{ needs.get-next-version.outputs.new_release_published == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: 📁 Checkout
        uses: actions/checkout@v4

      - name: "🚀 Deploy to dev"
        uses: aproorg/github-workflows/.github/actions/deploy-ecs-service@main
        with:
          AWS_REGION: ${{ inputs.aws_region }}
          ENVIRONMENT: dev
          AWS_DEPLOYMENT_ROLE: ${{ inputs.github_ci_role_arn }}
          IMAGE_TAG: latest
          FORCE_NEW_DEPLOYMENT: true
          SERVICE_NAME: ${{ inputs.service_name}}
          CLUSTER_NAME: ${{ inputs.cluster_name }}
          TERRAFORM_VERSION: ${{ inputs.terraform_version }}
