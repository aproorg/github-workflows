name: "✅ Quality checks"

# run on pull requests and calls from other workflows
on:
  workflow_call:
    inputs:
      terraform_version:
        description: "Terraform version"
        type: string
        default: "1.9.8"
      working_directory:
        description: "The working directory to use"
        type: string
        default: "."

permissions:
  id-token: write # Required f. IAM Token
  contents: write

jobs:
  terraform-quality:
    name: "✅ Terraform quality checks"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: "📁 Checkout"
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - uses: Homebrew/actions/setup-homebrew@master
        name: "☕️ Set up Homebrew"
        id: set-up-homebrew

      - name: "📥 Cache Homebrew Bundler RubyGems"
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: rubygems-

      - uses: actions/cache@v4
        name: "📥 Cache plugin dir"
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('terraform/.tflint.hcl') }}

      - uses: terraform-linters/setup-tflint@v4
        name: "🛠️ Setup TFLint"
        with:
          tflint_version: latest

      - name: "🛠️ Setup Terraform"
        uses: hashicorp/setup-Terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: "⬇️ Install tools"
        run: brew install tfenv tfsec

      - name: "🔍 Versions"
        run: |
          terraform --version
          tflint --version
          tfsec --version
          tfenv --version

      - name: "🔍 Lint Terraform"
        working-directory: ${{ inputs.working_directory }}
        run: |
          tflint --recursive 
          tfsec
